{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\n\nfunction useWidth(elementRef) {\n  _s();\n\n  const [width, setWidth] = useState(null);\n  const updateWidth = useCallback(() => {\n    if (elementRef && elementRef.current) {\n      const {\n        width\n      } = elementRef.current.getBoundingClientRect();\n      setWidth(width);\n    }\n  }, [elementRef]);\n  useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateWidth);\n    };\n  }, [updateWidth]);\n  return [width];\n}\n\n_s(useWidth, \"78kkjlKkr3KirNBBQyoc1gXu0q4=\");\n\nexport default useWidth;","map":{"version":3,"sources":["/Users/daniel/Desktop/workInProgress/src/components/useWidth.js"],"names":["useState","useEffect","useCallback","useWidth","elementRef","width","setWidth","updateWidth","current","getBoundingClientRect","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;;AAEA,SAASC,QAAT,CAAkBC,UAAlB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,WAAW,GAAGL,WAAW,CAAC,MAAM;AACpC,QAAIE,UAAU,IAAIA,UAAU,CAACI,OAA7B,EAAsC;AACpC,YAAM;AAAEH,QAAAA;AAAF,UAAYD,UAAU,CAACI,OAAX,CAAmBC,qBAAnB,EAAlB;AACAH,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,GAL8B,EAK5B,CAACD,UAAD,CAL4B,CAA/B;AAOAH,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW;AACXG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCJ,WAAlC;AACA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCL,WAArC;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,WAAD,CANM,CAAT;AAQA,SAAO,CAACF,KAAD,CAAP;AACD;;GAnBQF,Q;;AAqBT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nfunction useWidth(elementRef) {\n  const [width, setWidth] = useState(null);\n\n  const updateWidth = useCallback(() => {\n    if (elementRef && elementRef.current) {\n      const { width } = elementRef.current.getBoundingClientRect();\n      setWidth(width);\n    }\n  }, [elementRef]);\n\n  useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateWidth);\n    };\n  }, [updateWidth]);\n\n  return [width];\n}\n\nexport default useWidth;\n"]},"metadata":{},"sourceType":"module"}