{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validateLogin) => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validateLogin(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"v+k9enChqLFmZJ+L6oix2rahFoM=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/daniel/Desktop/workInProgress/src/components/useForm.js"],"names":["useState","useEffect","useForm","callback","validateLogin","values","setValues","email","password","name","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","value","target","handleSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,aAAX,KAA6B;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAE;AAAEO,IAAAA,KAAK,EAAC,EAAR;AAAYC,IAAAA,QAAQ,EAAC,EAArB;AAAyBC,IAAAA,IAAI,EAAC;AAA9B,GAAF,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAE,EAAF,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMc,YAAY,GAAGC,KAAK,IAAI;AAC1B,UAAM;AAAEN,MAAAA,IAAF;AAAQO,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AAEAX,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACI,IAAD,GAAQO;AAFF,KAAD,CAAT;AAIH,GAPD;;AASA,QAAME,YAAY,GAAGH,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACI,cAAN;AAEAR,IAAAA,SAAS,CAACP,aAAa,CAACC,MAAD,CAAd,CAAT;AACAQ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACF,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAImB,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBY,MAApB,KAA+B,CAA/B,IAAoCV,YAAxC,EAAsD;AACnDT,MAAAA,QAAQ;AACV;AAEJ,GANQ,EAMN,CAACO,MAAD,CANM,CAAT;AAQA,SAAO;AACHI,IAAAA,YADG;AAEHI,IAAAA,YAFG;AAGHb,IAAAA,MAHG;AAIHK,IAAAA;AAJG,GAAP;AAMP,CAnCD;;GAAMR,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validateLogin) => {\n        const [values, setValues] = useState ({ email:\"\", password:\"\", name:\"\" });\n        const [errors, setErrors] = useState ({ });\n        const [isSubmitting, setIsSubmitting] = useState(false);\n\n        const handleChange = event => {\n            const { name, value } = event.target;\n    \n            setValues({\n                ...values,\n                [name]: value\n            });\n        };\n    \n        const handleSubmit = event => {\n           event.preventDefault();\n\n           setErrors(validateLogin(values));\n           setIsSubmitting(true);\n        };\n\n        useEffect(() => {\n          \n            if (Object.keys(errors).length === 0 && isSubmitting) {\n               callback();\n            }\n\n        }, [errors]);\n\n        return {\n            handleChange,\n            handleSubmit,\n            values,\n            errors   \n         };\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}